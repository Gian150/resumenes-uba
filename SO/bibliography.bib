@MISC{so1c2020,
	author = "",
	year = "2019",
	title = "Sistemas operativos - Clases Te贸ricas",
	keywords={intro, sincro}
}

@book{books/daglib/0036999,
	added-at = {2016-01-08T00:00:00.000+0100},
	author = {Silberschatz, Abraham and Galvin, Peter Baer and Gagne, Greg},
	biburl = {https://puma.ub.uni-stuttgart.de/bibtex/22642761309bbbb048407a8e5898347c6/dblp},
	ee = {http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1118093755.html},
	interhash = {972eb557bf5dedb96ca5e2059e585ed0},
	intrahash = {2642761309bbbb048407a8e5898347c6},
	isbn = {978-1-118-09375-7},
	keywords = {dblp},
	pages = {I-XVII, 1-856},
	publisher = {Wiley},
	timestamp = {2016-02-02T11:46:55.000+0100},
	title = {Operating System Concepts - International Student Version, 9th Edition.},
	year = 2014,
}


@inbook {books/daglib/0036999.3,
	crossref={books/daglib/0036999},
	chapter={3. Processes},
	keywords={procesos},
	pages={105-162}
}

@inbook {books/daglib/0036999.5,
	crossref={books/daglib/0036999},
	chapter= {5. Process Synchronization},
	keywords={sincro},
	pages={203-261}
}

@inbook {books/daglib/0036999.6,
	crossref={books/daglib/0036999},
	chapter= {6. CPU Schedulling, secciones 1 a 6},
	keywords={scheduling},
	pages={261-290}
}

@inbook {books/daglib/0036999.7,
	crossref={books/daglib/0036999},
	chapter= {7. Deadlock, Secci贸n 2},
	keywords={sincro},
	pages={317-322}
}

@book{10.5555/2385452,
	author = {Herlihy, Maurice and Shavit, Nir},
	title = {The Art of Multiprocessor Programming, Revised Reprint},
	year = {2012},
	isbn = {9780123973375},
	publisher = {Morgan Kaufmann Publishers Inc.},
	address = {San Francisco, CA, USA},
	edition = {1st},
	abstract = {Revised and updated with improvements conceived in parallel programming courses, The Art of Multiprocessor Programming is an authoritative guide to multicore programming. It introduces a higher level set of software development skills than that needed for efficient single-core programming. This book provides comprehensive coverage of the new principles, algorithms, and tools necessary for effective multiprocessor programming. Students and professionals alike will benefit from thorough coverage of key multiprocessor programming issues. This revised edition incorporates much-demanded updates throughout the book, based on feedback and corrections reported from classrooms since 2008 Learn the fundamentals of programming multiple threads accessing shared memory Explore mainstream concurrent data structures and the key elements of their design, as well as synchronization techniques from simple locks to transactional memory systems Visit the companion site and download source code, example Java programs, and materials to support and enhance the learning experience Table of Contents 1. Introduction 2. Mutual Exclusion 3. Concurrent Objects and Linearization 4. Foundations of Shared Memory 5. The Relative Power of Synchronization Methods 6. The Universality of Consensus 7. Spin Locks and Contention 8. Monitors and Blocking Synchronization 9. Linked Lists: the Role of Locking 10. Concurrent Queues and the ABA Problem 11. Concurrent Stacks and Elimination 12. Counting, Sorting and Distributed Coordination 13. Concurrent Hashing and Natural Parallelism 14. Skiplists and Balanced Search 15. Priority Queues 16. Futures, Scheduling and Work Distribution 17. Barriers 18. Transactional Memory Appendices}
}

@inbook{10.5555/2385452.3,
	chapter={3. Concurrent Object, Secci贸n 7},
	keywords={progConcurr},
	crossref={10.5555/2385452},
	pages={59-61}
}

@inbook{10.5555/2385452.10,
	chapter={10. Memory Reclamation and the ABA Problem, Secci贸n 6},
	keywords={progConcurr},
	crossref={10.5555/2385452},
	pages={233-238}
}

